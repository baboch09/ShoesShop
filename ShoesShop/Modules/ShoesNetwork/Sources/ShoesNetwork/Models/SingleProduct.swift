//
// SingleProduct.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SingleProduct: Codable, JSONEncodable, Hashable {

    public var id: Double?
    public var title: String?
    public var description: String?
    public var price: Double?
    public var discountPercentage: Double?
    public var rating: Double?
    public var stock: Double?
    public var brand: String?
    public var category: String?
    public var thumbnail: String?
    public var images: [String]?

    public init(id: Double? = nil, title: String? = nil, description: String? = nil, price: Double? = nil, discountPercentage: Double? = nil, rating: Double? = nil, stock: Double? = nil, brand: String? = nil, category: String? = nil, thumbnail: String? = nil, images: [String]? = nil) {
        self.id = id
        self.title = title
        self.description = description
        self.price = price
        self.discountPercentage = discountPercentage
        self.rating = rating
        self.stock = stock
        self.brand = brand
        self.category = category
        self.thumbnail = thumbnail
        self.images = images
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case title
        case description
        case price
        case discountPercentage
        case rating
        case stock
        case brand
        case category
        case thumbnail
        case images
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(discountPercentage, forKey: .discountPercentage)
        try container.encodeIfPresent(rating, forKey: .rating)
        try container.encodeIfPresent(stock, forKey: .stock)
        try container.encodeIfPresent(brand, forKey: .brand)
        try container.encodeIfPresent(category, forKey: .category)
        try container.encodeIfPresent(thumbnail, forKey: .thumbnail)
        try container.encodeIfPresent(images, forKey: .images)
    }
}

